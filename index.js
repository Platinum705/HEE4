const Discord = require('discord.js');
const request = require('request');
const robot = new Discord.Client();
var p = "h!"

robot.on('ready', () => {
    robot.user.setActivity('loading..',{ type: "PLAYING" })
    robot.user.setStatus('dnd')
    setTimeout(status1, 16000)
    console.log('ready launched bot...')
});

//–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
robot.on('message', message => {
    if(message.content.startsWith(p + 'help')) {
        const embed = new Discord.RichEmbed()
            .setTitle("–ü–æ–º–æ—â—å")
            .setColor("#00BFFF")
            .setDescription('–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n ‚óã h!help-–ø–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º. \n ‚óã h!say-—Å–∫–∞–∑–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞. \n ‚óã h!inv-–ü—Ä–∏–≥–ª–æ—Å–∏—Ç—å –±–æ—Ç–∞ —Å–µ–±–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä. \n ‚óã h!poll-—É—Å—Ç—Ä–æ–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ. \n ‚óã h!afk on-–≤–æ–π—Ç–∏ –≤ AFK. \n ‚óã h!afk off-–≤—ã–π—Ç–∏ –∏–∑ AFK.')
            .setFooter("HEE4")
            .setTimestamp();
        message.channel.send({embed}).then(sentMessage => {   
            sentMessage.react('üá≠')
                .then(() => sentMessage.react('üá™'))
                    .then(() => sentMessage.react('üá±'))
                    .then(() => sentMessage.react('üáµ'))
                    .catch(() => console.error('One of the emojis failed to react.'));
        });
    }
});

robot.on('message', message => {
    if(message.content.startsWith(p + `inv`)) {
        const embed = new Discord.RichEmbed()
            .setTitle("–°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞")
            .setColor("#00BFF")
            .setDescription('\n –ü—Ä–∏–≥–ª–æ—Å–∏ —Å–µ–±–µ –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä. \n\n https://discordapp.com/oauth2/authorize?client_id=444545508963385364&scope=bot&permissions=1723325513')
            .setFooter("HEE4")
            .setTimestamp();
        message.channel.send({embed});
    }
});

robot.on('message', message => {
	const args = message.content.slice(p.length).trim().split(/ +/g);
	const command = args.shift().toLowerCase();
	if(message.content.startsWith(p + 'poll')) {
		message.delete().catch(O_o => {});
		const say_poll_embed = args.join(" ");
		const embed = new Discord.RichEmbed()
			.setColor(`#00FFFF`)
			.setDescription(say_poll_embed)
			.setFooter("–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ|HEE4")
			.setTimestamp();	
            message.channel.send({
                embed
            }).then(function(message) {
                message.react("‚úÖ")
                message.react("‚ùé")
            }).catch(function() {});
        }
    }); 

robot.on('message', message => {
    if(message.content.startsWith(p + 'say')) {
        let say = message.content.slice((p + 'say').length);
        message.delete();
        message.channel.send(say);
    }
});

robot.on('message', message => {
    if(message.content.startsWith(p + 'afk on')) {
        const embed = new Discord.RichEmbed()
            .setTitle("AFK")
            .setColor("#00BFFF")
            .setDescription('–í–æ—à–æ–ª –≤ AFK,–Ω–µ –º–µ—à–∞–π—Ç–µ –µ–º—É.')
            .setFooter("AFK|HEE4")
            .setTimestamp();
            message.author.username({embed});
        }
    });

    robot.on('message', message => {
        if(message.content.startsWith(p + 'afk off')) {
            const embed = new Discord.RichEmbed()
                .setTitle("AFK")
                .setColor("#00BFFF")
                .setDescription('–í—ã—à–µ–ª –∏–∑ AFK,—Ç–µ–ø–µ—Ä—å –æ–Ω —Å –Ω–∞–º.')
                .setFooter("AFK|HEE4")
                .setTimestamp();
                message.author.username({embed});
            }
        });
    
/*
–≤–µ—Ä–µ–º–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∫–∞ –ø–æ–¥—É–º–∞–µ–º –∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
robot.on('message', message => {
    if(message.content.indexOf(p) !== 0) return;
    const args = message.content.slice(p.length).trim().split(/ +/g);
    const command = args.shift().toLowerCase();

    if (['rsp', '–∫–Ω–±', '–∫—ã–∑'].includes(command)) {
        let userChoice;
                if (['–∫–∞–º–µ–Ω—å', 'rock', 'r', '–∫'].includes(args[0].toLowerCase())) {
                    userChoice = '–∫–∞–º–µ–Ω—å';
                }
                else if (['–±—É–º–∞–≥—É', '–±—É–º–∞–≥–∞', 'paper', 'p', '–±'].includes(args[0].toLowerCase())) {
                    userChoice = '–±—É–º–∞–≥—É';
                }
                else if (['scissors', '–Ω–æ–∂–Ω–∏—Ü—ã', 's', '–Ω'].includes(args[0].toLowerCase())) {
                    userChoice = '–Ω–æ–∂–Ω–∏—Ü—ã';
                }
                else if (!args[0]) {
                    message.channel.send('–í—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å —á—Ç–æ –≤—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ, –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥—É');
                    return;
                }
                else {
                    userChoice = 'Incorrect';
                }
                let computerChoice = Math.random();
                if (computerChoice < 0.34) {
                    computerChoice = "–∫–∞–º–µ–Ω—å";
                } else if(computerChoice <= 0.67) {
                    computerChoice = "–±—É–º–∞–≥—É";
                } else {
                    computerChoice = "–Ω–æ–∂–Ω–∏—Ü—ã";
                } message.channel.send("–Ø –≤—ã–±—Ä–∞–ª " + computerChoice);
                function rspCW(userChoice, computerChoice) {
                    if (userChoice === computerChoice) {
                        return "–Ω–∏—á—å—è!";
                    }
                    else if(userChoice === "–∫–∞–º–µ–Ω—å") {
                        if(computerChoice === "–Ω–æ–∂–Ω–∏—Ü—ã") {
                            return "—Ç—ã –≤—ã–∏–≥—Ä–∞–ª!";
                        }
                        else if (computerChoice === "–±—É–º–∞–≥—É") {
                            return "—Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª";
                        }
                    }
                    else if(userChoice === "–±—É–º–∞–≥—É") {
                        if(computerChoice === "–∫–∞–º–µ–Ω—å") {
                            return "—Ç—ã –≤—ã–∏–≥—Ä–∞–ª!";
                        } else if (computerChoice === "–Ω–æ–∂–Ω–∏—Ü—ã") {
                            return "—Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª";
                        }
                    }
                    else if(userChoice === "–Ω–æ–∂–Ω–∏—Ü—ã") {
                        if(computerChoice === "–±—É–º–∞–≥—É") {
                            return "—Ç—ã –≤—ã–∏–≥—Ä–∞–ª!";
                        } else if (computerChoice === "–∫–∞–º–µ–Ω—å") {
                            return "—Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª.";
                        }
                    }
                    else if (userChoice === 'Incorrect') {
                        return "—Ç—ã –Ω–µ –≤—ã–±—Ä–∞–ª –Ω–∏ –∫–∞–º–µ–Ω—å, –Ω–∏ –Ω–æ–∂–Ω–∏—Ü—ã, –Ω–∏ –±—É–º–∞–≥—É";
                    }
                }
                if (userChoice === 'Incorrect') {
                    message.channel.send(message.author + ", " + rspCW(userChoice, computerChoice))
                }
                else {
                message.channel.send(message.author + ", " + rspCW(userChoice, computerChoice) + ' –¢—ã –≤—ã–±—Ä–∞–ª\(–∞\) ' + userChoice + ' –Ø –≤—ã–±—Ä–∞–ª ' + computerChoice);
             }};
});
*/

//–∑–∞–∫–æ–Ω—á–µ–ª–∏—Å—å –∫–æ–º–∞–Ω–¥—ã 

function status1() {
    robot.user.setActivity('–Ω–∞ h!help',{ type: "WATCHING" })
    robot.user.setStatus('online')
}

robot.login(process.env.SECRET);